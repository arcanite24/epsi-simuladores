{"version":3,"sources":["../../src/pages/smart-calendar/smart-calendar.module.ts","../../src/pages/smart-calendar/smart-calendar.ts"],"names":[],"mappings":"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","file":"17.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SmartCalendarPage } from './smart-calendar';\n\n@NgModule({\n  declarations: [\n    SmartCalendarPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SmartCalendarPage),\n  ],\n})\nexport class SmartCalendarPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/smart-calendar/smart-calendar.module.ts","import { DataProvider } from './../../providers/data/data';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { AuthProvider } from './../../providers/auth/auth';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Collections, User, Event } from '../../app/app.models';\nimport { Observable } from 'rxjs';\nimport { flattenDeep } from 'lodash';\nimport moment from 'moment'\n\n@IonicPage()\n@Component({\n  selector: 'page-smart-calendar',\n  templateUrl: 'smart-calendar.html',\n})\nexport class SmartCalendarPage {\n  public completedTasks: string[] = [];\n\n  public events$: Observable<Event[]>;\n  public events: Event[] = [];\n  public loadedEvents: string[] = [];\n\n  public userSub: any;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public auth: AuthProvider,\n    private afs: AngularFirestore,\n    private data: DataProvider,\n  ) {}\n\n  ionViewDidLoad() {\n    this.auth.user$.subscribe(user => {\n      if (user) {\n        this.afs\n          .collection(Collections.USER)\n          .doc<User>(user.uid)\n          .valueChanges()\n          .subscribe(\n            u =>\n              (this.completedTasks = u.completedTasks ? u.completedTasks : [])\n          );\n        if (!this.events$) this.loadEvents(user.uid);\n      }\n    });\n  }\n\n  loadEvents(uid: string) {\n    this.userSub = this.afs\n      .collection(Collections.USER)\n      .doc<User>(uid)\n      .valueChanges()\n      .subscribe(async user => {\n        if (!user.customCalendar) return;\n\n        const events = flattenDeep(\n          Object.values(user.customCalendar)\n        ).filter(\n          (e: any) =>\n            e.start.substr(0, 10) === moment().format('YYYY-MM-DD')\n        ) as any[];\n\n        if (!user.completedTasks) user.completedTasks = [];\n        this.completedTasks = user.completedTasks;\n\n        /*let formatedEvents = []*/\n        if (this.events.length > 0) return;\n\n        for (let e of events) {\n          if (e.event && !this.loadedEvents.includes(e.event)) {\n            const eventDoc = await this.data.getDocAlt<Event>(\n              Collections.EVENT,\n              e.event\n            );\n\n            setTimeout(() => {\n              this.events.push({\n                // id: `smart-calendar-event-${e.content}`,\n                ...e,\n                id: eventDoc.id,\n                start: new Date(e.start),\n                title: e.content_name,\n                desc: eventDoc.desc,\n                date: new Date().toISOString(),\n                tasks: eventDoc.tasks,\n                links: eventDoc.links,\n                color:\n                  this.completedTasks.indexOf(eventDoc.id) >= 0\n                    ? { primary: '#5e4b8b', secondary: '#5e4b8b' }\n                    : { primary: '#CF4747', secondary: '#CF4747' },\n              });\n              this.loadedEvents.push(e.event);\n            }, 100);\n          }\n        }\n      });\n  }\n\n  openLink(url: string) {\n\n    console.log(url);\n\n    // Content Detail\n    if (url.includes('/content')) {\n      const [,, type, id] = url.split('/');\n      this.navCtrl.push('ClaseDetailPage', { type, id });\n    }\n\n  }\n\n  async toggleCompleted(id: string) {\n\n    console.log(id)\n\n    const userKey = `${Collections.USER}/${this.auth.user.uid}`\n    const _user = await this.data.getDocAlt<User>(Collections.USER, this.auth.user.uid);\n    const completedTasks: string[] = _user.completedTasks || []\n\n    if (completedTasks.indexOf(id) < 0) {\n\n      completedTasks.push(id)\n      await this.afs.doc(userKey).update({ completedTasks })\n      /* this.checkChanged.next({ id, added: true }); */\n\n    } else {\n      if (completedTasks.length > 0) completedTasks.splice(completedTasks.indexOf(id), 1)\n      await this.afs.doc(userKey).update({ completedTasks })\n      /* this.checkChanged.next({ id, added: false }); */\n    }\n\n    // this.stats.modifyCustomCounter(`event-${id}`, this.event.title, 1)\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/smart-calendar/smart-calendar.ts"],"sourceRoot":""}