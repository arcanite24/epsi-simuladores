{"version":3,"sources":["../../src/pages/bloque-alt/bloque-alt.module.ts","../../src/pages/bloque-alt/bloque-alt.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACH;AAU7C,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;AAAtB,mBAAmB;IAR/B,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,kEAAa;SACd;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,kEAAa,CAAC;SACxC;KACF,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZU;AACe;AACA;AACG;AAC5B;AACyB;AAOzD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAQxB,YACS,OAAsB,EACtB,SAAoB,EACnB,IAAkB,EAClB,IAAkB;QAHnB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACnB,SAAI,GAAJ,IAAI,CAAc;QAClB,SAAI,GAAJ,IAAI,CAAc;QAXrB,OAAE,GAAW,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAKtC,eAAU,GAAa,EAAE,CAAC;IAO9B,CAAC;IAEJ,cAAc;QAEZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAE3B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/B,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS;gBAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;QACpE,CAAC,CAAC;IAEJ,CAAC;IAED,IAAI,gBAAgB;QAClB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YAAE,OAAO,CAAC,CAAC;SAAE;QAClC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO,CAAC,CAAC;SAAE;QACnC,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,UAAU,EAAE;YACrC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBAAE,OAAO,EAAE,CAAC;aAAE;SACrD;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAEK,WAAW,CAAC,EAAU;;YAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAU,oEAAW,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAC5E,CAAC;KAAA;IAEK,YAAY,CAAC,EAAU;;YAC3B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,CACjD,oEAAW,CAAC,OAAO,EACnB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC,CACxC,CAAC;YACF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;YAC3D,IAAI,CAAC,UAAU,GAAG,sDAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC;QAC9E,CAAC;KAAA;CACF;AAhDY,aAAa;IAJzB,gEAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;OACG;KAC/B,CAAC;yEAU+B;QACX,0EAAS;QACb,0EAAY;QACZ,UAAY;AAoC7B;SAhDY,aAAa,gB","file":"45.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { BloqueAltPage } from './bloque-alt';\n\n@NgModule({\n  declarations: [\n    BloqueAltPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(BloqueAltPage),\n  ],\n})\nexport class BloqueAltPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/bloque-alt/bloque-alt.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { DataProvider } from '../../providers/data/data';\nimport { Collections, Content } from '../../app/app.models';\nimport { sortBy } from 'lodash';\nimport { AuthProvider } from '../../providers/auth/auth';\n\n@IonicPage({\n  segment: 'bloque-alt/:id'\n})\n@Component({\n  selector: 'page-bloque-alt',\n  templateUrl: 'bloque-alt.html',\n})\nexport class BloqueAltPage {\n  public id: string = this.navParams.get('id');\n\n  public bloque: Content;\n  public children: Content[];\n  public completed: string[];\n  public contentIds: string[] = [];\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private data: DataProvider,\n    private auth: AuthProvider,\n  ) {}\n\n  ionViewDidLoad() {\n\n    this.loadContent(this.id);\n    this.loadChildren(this.id);\n\n    this.auth.user$.subscribe(user => {\n      if (user && !this.completed) this.completed = user.completedTasks;\n    })\n\n  }\n\n  get completedContent(): number {\n    if (!this.completed) { return 0; }\n    if (!this.contentIds) { return 0; }\n    let counter = 0;\n    for (const content of this.contentIds) {\n      if (this.completed.includes(content)) { counter++; }\n    }\n    return counter;\n  }\n\n  async loadContent(id: string) {\n    this.bloque = await this.data.getDocAlt<Content>(Collections.CONTENT, id);\n  }\n\n  async loadChildren(id: string) {\n    const children = await this.data.getCollectionQuery<Content>(\n      Collections.CONTENT,\n      ref => ref.where('parent_id', '==', id)\n    );\n    this.children = children.filter(c => c.liberadoInPrograma);\n    this.contentIds = sortBy(children, 'sortIndex').map(t => t.event || 'NULL');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/bloque-alt/bloque-alt.ts"],"sourceRoot":""}