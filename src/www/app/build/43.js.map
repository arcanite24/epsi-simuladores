{"version":3,"sources":["../../src/pages/checklist/checklist.module.ts","../../src/pages/checklist/checklist.ts"],"names":[],"mappings":"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","file":"43.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChecklistPage } from './checklist';\n\n@NgModule({\n  declarations: [\n    ChecklistPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ChecklistPage),\n  ],\n})\nexport class ChecklistPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/checklist/checklist.module.ts","import { BackProvider } from './../../providers/back/back';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController, LoadingController } from 'ionic-angular';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Collections, User } from '../../app/app.models';\nimport { DataProvider } from '../../providers/data/data';\nimport { AuthProvider } from '../../providers/auth/auth';\n\n@IonicPage()\n@Component({\n  selector: 'page-checklist',\n  templateUrl: 'checklist.html',\n})\nexport class ChecklistPage {\n\n  public checklist: any[]\n  public uid: string = localStorage.getItem('uid')\n\n  public completed: string[];\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public toast: ToastController,\n    public back: BackProvider,\n    public load: LoadingController,\n    private afs: AngularFirestore,\n    private data: DataProvider,\n    private auth: AuthProvider,\n  ) {\n  }\n\n  ionViewDidLoad() {\n\n    const l = this.load.create({content: 'Cargando checklist...'})\n    l.present()\n\n    this.afs.collection(Collections.TODO)\n      .valueChanges()\n      .subscribe(data => {\n        this.checklist = data\n        l.dismiss()\n      })\n\n    this.auth.user$.subscribe(user => {\n      if (user && user.completedTasks && !this.completed) this.completed = user.completedTasks;\n    })\n\n    /* this.back.getAllTodos().subscribe(data => {\n      this.checklist = data.map(t => t.users ? t : ({users: {}, ...t}))\n      l.dismiss()\n    }, err => {\n      this.toast.create({message: 'No se pudo cargar el checklist...', duration: 2000}).present()\n      l.dismiss()\n      this.navCtrl.setRoot('HomePage')\n    }) */\n\n  }\n\n  onChangeTodo(completed: boolean, users: any, id: string) {\n\n    if (!users) users = {[this.uid]: completed}\n    users[this.uid] = completed\n\n    this.back.updateTodo(id, {users}).subscribe(data => {\n      console.log(data)\n    }, err => {\n      this.toast.create({message: 'No se pudo actualizar el checklist...', duration: 2000}).present()\n    })\n\n  }\n\n  async toggleCompleted(id: string) {\n\n    console.log(id)\n\n    const userKey = `${Collections.USER}/${this.auth.user.uid}`\n    const _user = await this.data.getDocAlt<User>(Collections.USER, this.auth.user.uid);\n    const completedTasks: string[] = _user.completedTasks || []\n\n    if (completedTasks.indexOf(id) < 0) {\n\n      completedTasks.push(id)\n      await this.afs.doc(userKey).update({ completedTasks })\n      /* this.checkChanged.next({ id, added: true }); */\n\n    } else {\n      if (completedTasks.length > 0) completedTasks.splice(completedTasks.indexOf(id), 1)\n      await this.afs.doc(userKey).update({ completedTasks })\n      /* this.checkChanged.next({ id, added: false }); */\n    }\n\n    // this.stats.modifyCustomCounter(`event-${id}`, this.event.title, 1)\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/checklist/checklist.ts"],"sourceRoot":""}